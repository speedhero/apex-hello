buildscript {
    ext {
        springBootVersion = '1.5.16.RELEASE'
    }

    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
        mavenLocal()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

repositories {
    mavenLocal()
    maven {
        credentials {
            username = "${NEXUS_USER}"
            password = "${NEXUS_PASSWORD}"
        }
        url "http://192.168.184.28:8081/repository/maven-public/"
    }
   mavenCentral()
}
configurations.all {
    //每隔24小时检查远程依赖是否存在更新
    //resolutionStrategy.cacheChangingModulesFor 24, 'hours'
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'

group = 'apexsoft.ams'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets {
    main {
        java {
            srcDirs = [
                    'src/main/java'
            ]
        }
    }
}

configurations {
    providedRuntime
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}


ext {
    amsVersion = "1.0.3"
}

jar.enabled=true

dependencies {
    compile project(':ams-client')
    compile project('ams-protocol')
    //# 如果依赖aas-spring-stater,则不用加入ams依赖，aas默认依赖ams
    compile ("com.apex:ams-spring-boot-starter:${amsVersion}")


    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-log4j2")


    testCompile group: 'junit', name: 'junit', version: '4.12'

// lombok，编译有效，打包无效
   // compileOnly 'org.projectlombok:lombok:1.18.22'
// gradle 5.0以上版本注解处理不再compile classpath，需要增加 annotation processor path
    //annotationProcessor 'org.projectlombok:lombok'

    compile 'org.slf4j:slf4j-api:1.7.32'
}